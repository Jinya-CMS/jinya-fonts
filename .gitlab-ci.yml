docker-build:
  image: harbor.ulbricht.casa/proxy/library/docker:dind
  stage: build
  before_script:
    - docker login -u "$HARBOR_USER" -p "$HARBOR_PASSWORD" harbor.ulbricht.casa
    - docker login -u "$DOCKERHUB_USER" -p "$DOCKERHUB_PASSWORD"
  script:
    - docker build --pull -t "harbor.ulbricht.casa/jinya/jinya-fonts:${CI_COMMIT_TAG}" -f ./Dockerfile .
    - docker tag "harbor.ulbricht.casa/jinya/jinya-fonts:${CI_COMMIT_TAG}" "harbor.ulbricht.casa/jinya/jinya-fonts:latest"
    - docker tag "harbor.ulbricht.casa/jinya/jinya-fonts:${CI_COMMIT_TAG}" "jinyacms/jinya-fonts:${CI_COMMIT_TAG}"
    - docker tag "harbor.ulbricht.casa/jinya/jinya-fonts:${CI_COMMIT_TAG}" jinyacms/jinya-fonts:latest
    - docker push "harbor.ulbricht.casa/jinya/jinya-fonts:${CI_COMMIT_TAG}"
    - docker push "harbor.ulbricht.casa/jinya/jinya-fonts:latest"
    - docker push "jinyacms/jinya-fonts:${CI_COMMIT_TAG}"
    - docker push "jinyacms/jinya-fonts:latest"
  rules:
    - if: $CI_COMMIT_TAG
      exists:
        - Dockerfile

build-merge-request:
  image: harbor.ulbricht.casa/proxy/library/golang:1.21-alpine
  stage: build
  script:
    - go vet
    - go build -o jinya-fonts

variables:
  JEKYLL_ENV: production
  LC_ALL: C.UTF-8

pages:
  stage: deploy
  image: harbor.ulbricht.casa/proxy/library/ruby:latest
  before_script:
    - gem install bundler jekyll
    - bundle update rb-inotify
    - bundle install
  script:
  - bundle exec jekyll build -d public
  artifacts:
    paths:
    - public
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH

